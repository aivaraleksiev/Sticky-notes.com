Copyright (c)  2021 Ayvar Aleksiev. All rights reserved.

Look at Eliseys storyboard interview task

- Make it with a REST API, web based, with server and client side
On server side make an engine folder with the business logic and an decide about the api part.


- Crossport project and issues in github:
crossport tasks from jira manually.
similar to https://github.com/Corvusoft/restbed/projects

Libraries resources:
    https://github.com/fffaraz/awesome-cpp

- which library am I going to use for network communication:
cpprestsdk ->  I did not see support for RPC.
   https://mariusbancila.ro/blog/2017/11/19/revisited-full-fledged-client-server-example-with-c-rest-sdk-2-10/
   https://github.com/Microsoft/cpprestsdk/wiki/Samples
   https://github.com/microsoft/cpprestsdk/tree/master/Release/samples
   
RESTinio -> in progress

boost?

D:\Books\srm boost networking books

- library for logging:
    Check awesome-cpp repo for logging libraries. If we use gtest, maybe we can use glog. Also it should be available in vcpkg

- library for test:
gtest

- read/write client/server app configuration from xml/json file:
    There is JSON parser in POCO framework

- look at books for API:
APIs: A StrategyGuide
API Design for C++
How to Design A Good API and Why It Matters

- Can the client app be written in python and the server in c++? 
For starter look at book API Design for C++, for example chapter "ADDING SCRIPT BINDINGS"


------
api usage metrics
certificates
users (login token), administrator
database

 